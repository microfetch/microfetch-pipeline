from django.db import models

LENGTH_ACCESSION = 40
LENGTH_MEDIUM = 256
LENGTH_LONG = 1024


class taxons(models.Model):
    taxon_id = models.PositiveBigIntegerField(primary_key=True)
    last_updated = models.DateTimeField(null=True)
    time_added = models.DateTimeField(auto_now_add=True)


class accession_numbers(models.Model):
    taxon_id = models.ForeignKey("taxons", on_delete=models.DO_NOTHING)
    accession_number = models.CharField(primary_key=True, max_length=LENGTH_ACCESSION)
    passed_filter = models.BooleanField(null=True)
    filter_failed = models.CharField(null=True, max_length=LENGTH_MEDIUM)
    time_added = models.DateTimeField(auto_now_add=True)
    time_fetched = models.DateTimeField(null=True)


class record_details(models.Model):
    accession_number = models.ForeignKey("accession_numbers", on_delete=models.DO_NOTHING)
    time_fetched = models.DateTimeField(auto_now_add=True)
    # Fields as retrieved from ENA database
    accession = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    sample_accession = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    secondary_sample_accession = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    bio_material = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    cell_line = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    cell_type = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    collected_by = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    collection_date = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    country = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    cultivar = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    culture_collection = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    description = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    dev_stage = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    ecotype = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    environmental_sample = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    first_public = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    germline = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    identified_by = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    isolate = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    isolation_source = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    location = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    mating_type = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    serotype = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    serovar = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sex = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    submitted_sex = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    specimen_voucher = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    strain = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sub_species = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sub_strain = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    tissue_lib = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    tissue_type = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    variety = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    tax_id = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    scientific_name = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sample_alias = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    checklist = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    center_name = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    depth = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    elevation = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    altitude = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    environment_biome = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    environment_feature = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    environment_material = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    temperature = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    salinity = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sampling_campaign = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sampling_site = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sampling_platform = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    protocol_label = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    project_name = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    host = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    host_tax_id = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    host_status = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    host_sex = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    submitted_host_sex = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    host_body_site = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    host_gravidity = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    host_phenotype = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    host_genotype = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    host_growth_conditions = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    environmental_package = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    investigation_type = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    experimental_factor = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sample_collection = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sequencing_method = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    target_gene = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    ph = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    broker_name = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sample_title = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    sample_material = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    taxonomic_identity_marker = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    assembly_quality = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    assembly_software = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    taxonomic_classification = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    completeness_score = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    contamination_score = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    binning_software = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    lat = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    lon = models.CharField(max_length=LENGTH_ACCESSION, null=True)
    sample_capture_status = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    collection_date_submitted = models.CharField(max_length=LENGTH_MEDIUM, null=True)
    submission_tool = models.CharField(max_length=LENGTH_MEDIUM, null=True)
